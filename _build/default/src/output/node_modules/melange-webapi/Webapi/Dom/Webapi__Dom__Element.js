// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as Webapi__Dom__ChildNode from "./Webapi__Dom__ChildNode.js";
import * as Webapi__Dom__EventTarget from "./Webapi__Dom__EventTarget.js";
import * as Webapi__Dom__GlobalEventHandlers from "./Webapi__Dom__GlobalEventHandlers.js";
import * as Webapi__Dom__Node from "./Webapi__Dom__Node.js";
import * as Webapi__Dom__NonDocumentTypeChildNode from "./Webapi__Dom__NonDocumentTypeChildNode.js";
import * as Webapi__Dom__ParentNode from "./Webapi__Dom__ParentNode.js";
import * as Webapi__Dom__Slotable from "./Webapi__Dom__Slotable.js";
import * as Webapi__Dom__Types from "./Webapi__Dom__Types.js";

function ofNode(node) {
  if (Webapi__Dom__Node.nodeType(node) === /* Element */ 0) {
    return Caml_option.some(node);
  }
  
}

function Impl(T) {
  const asHtmlElement = (function (element) {
      // BEWARE: Assumes "contentEditable" uniquely identifies an HTMLELement
      return element.contentEditable !== undefined ?  element : null;
    }
  );
  const asHtmlElement$1 = function (self) {
    return Caml_option.null_to_opt(asHtmlElement(self));
  };
  const insertAdjacentElement = function (position, element, self) {
    self.insertAdjacentElement(Webapi__Dom__Types.encodeInsertPosition(position), element);
  };
  const insertAdjacentHTML = function (position, text, self) {
    self.insertAdjacentHTML(Webapi__Dom__Types.encodeInsertPosition(position), text);
  };
  const insertAdjacentText = function (position, text, self) {
    self.insertAdjacentText(Webapi__Dom__Types.encodeInsertPosition(position), text);
  };
  return {
    asHtmlElement: asHtmlElement$1,
    ofNode: ofNode,
    insertAdjacentElement: insertAdjacentElement,
    insertAdjacentHTML: insertAdjacentHTML,
    insertAdjacentText: insertAdjacentText
  };
}

const include = Webapi__Dom__Node.Impl({});

Webapi__Dom__EventTarget.Impl({});

Webapi__Dom__GlobalEventHandlers.Impl({});

Webapi__Dom__ParentNode.Impl({});

Webapi__Dom__NonDocumentTypeChildNode.Impl({});

Webapi__Dom__ChildNode.Impl({});

Webapi__Dom__Slotable.Impl({});

const asHtmlElement = (function (element) {
      // BEWARE: Assumes "contentEditable" uniquely identifies an HTMLELement
      return element.contentEditable !== undefined ?  element : null;
    }
);

function asHtmlElement$1(self) {
  return Caml_option.null_to_opt(asHtmlElement(self));
}

function insertAdjacentElement(position, element, self) {
  self.insertAdjacentElement(Webapi__Dom__Types.encodeInsertPosition(position), element);
}

function insertAdjacentHTML(position, text, self) {
  self.insertAdjacentHTML(Webapi__Dom__Types.encodeInsertPosition(position), text);
}

function insertAdjacentText(position, text, self) {
  self.insertAdjacentText(Webapi__Dom__Types.encodeInsertPosition(position), text);
}

const nodeType = include.nodeType;

export {
  Impl,
  nodeType,
  asHtmlElement$1 as asHtmlElement,
  ofNode,
  insertAdjacentElement,
  insertAdjacentHTML,
  insertAdjacentText,
}
/* include Not a pure module */
