// Generated by Melange

import * as Caml_js_exceptions from "melange.js/caml_js_exceptions.js";
import * as Stdlib from "melange/stdlib.js";

const Composite = {
  sourceOver: "source-over",
  sourceIn: "source-in",
  sourceOut: "source-out",
  sourceAtop: "source-atop",
  destinationOver: "destination-over",
  destinationIn: "destination-in",
  destinationOut: "destination-out",
  destinationAtop: "destination-atop",
  lighter: "lighter",
  copy: "copy",
  xor: "xor"
};

const LineCap = {
  butt: "butt",
  round: "round",
  square: "square"
};

const LineJoin = {
  round: "round",
  bevel: "bevel",
  miter: "miter"
};

function setStrokeStyle(ctx, param, v) {
  ctx.strokeStyle = v;
}

function setFillStyle(ctx, param, v) {
  ctx.fillStyle = v;
}

function reifyStyle(x) {
  const instanceOf = (function(x,y) {return +(x instanceof y)}
  );
  let tmp;
  if (typeof x === "string") {
    tmp = /* String */ 0;
  } else if (instanceOf(x, CanvasGradient)) {
    tmp = /* Gradient */ 1;
  } else if (instanceOf(x, CanvasPattern)) {
    tmp = /* Pattern */ 2;
  } else {
    throw new Caml_js_exceptions.MelangeError(Stdlib.Invalid_argument, {
        MEL_EXN_ID: Stdlib.Invalid_argument,
        _1: "Unknown canvas style kind. Known values are: String, CanvasGradient, CanvasPattern"
      });
  }
  return [
    tmp,
    x
  ];
}

function fillStyle(ctx) {
  return reifyStyle(ctx.fillStyle);
}

function strokeStyle(ctx) {
  return reifyStyle(ctx.strokeStyle);
}

export {
  Composite,
  LineCap,
  LineJoin,
  setStrokeStyle,
  setFillStyle,
  reifyStyle,
  fillStyle,
  strokeStyle,
}
/* No side effect */
