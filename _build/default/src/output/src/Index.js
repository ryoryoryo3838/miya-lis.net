// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as ReasonReactRouter from "reason-react/ReasonReactRouter.js";
import * as Client from "react-dom/client";
import * as JsxRuntime from "react/jsx-runtime";

function Index$Index(Props) {
  return JsxRuntime.jsx("h1", {
    children: "ReasonReact + Melange + Vite!!!"
  });
}

const Index = {
  make: Index$Index
};

function Index$Error(Props) {
  return JsxRuntime.jsx("h1", {
    children: "Error!!!"
  });
}

const $$Error = {
  make: Index$Error
};

function Index$Router(Props) {
  const route = ReasonReactRouter.useUrl(undefined, undefined);
  const match = route.path;
  if (match) {
    return JsxRuntime.jsx(Index$Error, {});
  } else {
    return JsxRuntime.jsx(Index$Index, {});
  }
}

const Router = {
  make: Index$Router
};

const node = document.querySelector("#root");

if (node == null) {
  console.error("Failed to start React: couldn't find the #root element");
} else {
  const root = Client.createRoot(node);
  root.render(JsxRuntime.jsx(Index$Router, {}));
}

const node$1 = (node == null) ? undefined : Caml_option.some(node);

export {
  Index,
  $$Error,
  Router,
  node$1 as node,
}
/* node Not a pure module */
