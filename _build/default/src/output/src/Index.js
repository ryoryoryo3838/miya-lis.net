// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as Exp from "./pages/Exp.js";
import * as Home from "./pages/Home.js";
import * as Post from "./components/Post.js";
import * as ReasonReactRouter from "reason-react/ReasonReactRouter.js";
import * as Client from "react-dom/client";
import * as JsxRuntime from "react/jsx-runtime";

function Index$Router(Props) {
  const route = ReasonReactRouter.useUrl(undefined, undefined);
  console.log(route.path);
  const match = route.path;
  if (!match) {
    return JsxRuntime.jsx(Exp.make, {});
  }
  let exit = 0;
  switch (match.hd) {
    case "aboutme" :
      if (!match.tl) {
        return JsxRuntime.jsx(Post.make, {
          path: "aboutme"
        });
      }
      break;
    case "home" :
    case "index" :
      exit = 2;
      break;
    case "post" :
      const match$1 = match.tl;
      if (match$1) {
        return JsxRuntime.jsx(Post.make, {
          path: match$1.hd
        });
      }
      break;
  }
  if (exit === 2 && !match.tl) {
    return JsxRuntime.jsx(Home.make, {});
  }
  console.log(route.path);
  return JsxRuntime.jsx(Home.make, {});
}

const Router = {
  make: Index$Router
};

const node = document.querySelector("#root");

if (node == null) {
  console.error("Failed to start React: couldn't find the #root element");
} else {
  const root = Client.createRoot(node);
  root.render(JsxRuntime.jsx(Index$Router, {}));
}

const node$1 = (node == null) ? undefined : Caml_option.some(node);

export {
  Router,
  node$1 as node,
}
/* node Not a pure module */
